<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAdJJREFUWEdj
        GAWjACs4EZwExFeB+A8Q/6cQg8y4ynA8KAFqOgFwMigZzQDqYaIccSL4GkyDxZXK/6G3evBiuOFArH2x
        4L//zY7/1ler/7OdDEeRg+IrUFvwAKRgX/322H9CAKRO7ULu/+Ofb0JFIODFr/f/w2/3IVsOwn+gtuAB
        SBqIcYD0uVSwZdjAPyDEcARBgKSYGAfMerkbysIOngMdx3oyjHYOAFlACIDSBM0c8OPvLygLN/C92U47
        B1z59gjKwg00LubRzgEFD+ZDWdjB4U/XEZaDMEGApJgYB7AAE9jm92egPFTw7Ne7/8oXsmnrAJA6kCNA
        IXH528P/P//9/v/k59v/017s+C95NgVhMQwTBEiKSXFA0cMF/69+e/z/178//58CHTDz5a7/UsAyAtk8
        MCYIkBQTGwVb35+F8lABKIuqXsihrQNAPscHjtA6EQ54NhzwggiU1QgBq6tVtHPADGBqxwdADqRpZQTK
        argqJFB1jN5ogdqCB5DRIAFltaOfbkBFIADkcwzLiWyQgBqjYA2kNsk0L+b/9wM2yUBxjhLsMHw8+DLU
        FjwA1HBE10g1HBQLtYUAgDjiChBTq1l+heFkSBzU9FEwCpAAAwMAyYDcwF6w5i8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABD9JREFUWEft
        V11sFFUUngcTgj6hJBgxQeMjiC/KKw8GamuKYKAGf1JpS/kpxhSrNoYWLNRIaaW1WkVrS4tQSBp+bUrb
        3W7a+tsfut2dmaXBCqFdMRBoa+Lu1nX2eM+dMzt3t3e3W8Q3vuRkZ2fOOd+Ze37uHeU+7goXtYeVLs/T
        ilNL54LXeO9/RcfIk4pDK1Uc3iHFoYJc+LMSxeV7gqzuAVyjixlxNXM8E0uWVEKKU/1EcfgeIS93Cae2
        ijnzi84fcunhLO+4sf+3m9D4+yQXvN7kvW486NLCoi4LfIL9Pkfe5gmndwMzDlrOHu+7/PexG5MwY0Qg
        EfBZM9NZynQtOxZEQHHo68lrijDfPEq+1ec3QkmI4xFkujm6PxIbRKorwXNuL/tHV2+R2/njwNWbFAAP
        gqUjlZpwaDWW0ZvaRPS1m1vPwcnz7XBnapruyKGN/gr1La3w05Cb/2erZ68EFmZS8FYzqx1zLi57+hvb
        YM2rebAu9y34rPEEFH54EF7Of5vf31xQBGXVdbC/5kuug/JxXT23w3Q8ZtdEKHmL8j43o8WCE7EuZxd3
        nJG9I0oikxfpedVXR8kS4CjrFMsvkxJik8ChDqMStlp8tRfsOQBpr+fPIpTJSyzYUxcukiUArqTdomxY
        SYGj1KHyfGGfky1HaGYGsnbulpIlkoovGsjaxEbPdcMMgHFIx3a3+gwpQDmrXhGuH/ulJMkEU4GBWyhj
        w8ryz1ZhJbEKwE2FFBpYzkRgB8hI5pJrE37yAPCN/44QgPYCsQrAm6SAyiJa2zqlBHPJrdu2n3oxgC41
        jVgF4LKQQtHIGOhXxqDf7YVLqg5dfT/A2te2SkkSSW5RCbg1H5dBjwqF7jEhALZ9z4JQhJmDVwz/H7F1
        8HlTi5RIJjgbhjwaWZpY775mF2GfZxGxxoH2+oXd+j/xsz8SicCJs21sHhRISS3JLvyAv7EI9LWwO7pT
        DhCbBDgkTCVoYoUYDofhXGc3BEMhcgUQCIag95chqDzSCLtKymFb8T4oLKuAJlaoI/ooDzQeuGVbfln+
        9xCbBDgmcVwyRdxScYwOqz5OFAgGyR3wOZ+RvT3mzfPeK4Wp6T9Jw0bAMOBRcRQ79WXElgD8JGNGm02b
        UW3jcch/fy8cP/Md1DW3QOYWOw1575ZGrz9t+JaTisjV/VbumXgriSUJcMs0TzLcCLfUvwIBKK89Aq/s
        fAcyqQZw1uNvz88D0f/4XASelGxydTz1gyseHsxDBDdmhwsD04Foc/bEEMf/InDZcfUse+6r0/sseU8R
        eIwSgsAtFQvzrLM3YQDPs/bDghNybpLP+0hmwVyJaDpQFnR5jSVfn4ac3mFYvu8wFH8/DE8dqofVLnfk
        gfZLUT2S8fm/eTywJszC5N2RoqBu1b39WDFblM2JhB8mLOfaIO/zOVvtvwLfTPw069BXJB6v95EMivIv
        ktaLqcLD0CkAAAAASUVORK5CYII=
</value>
  </data>
</root>